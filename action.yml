description: Rebase all branches from remote target

inputs:
  remote_repo:
    description: Remote source project
    required: true

  remote_branch:
    description: Remote source branch
    required: false
    default: main

runs:
  using: composite

  steps:
    - shell: bash
      run: |
        git remote add remote https://github.com/${{ inputs.remote_repo }}.git
        git fetch --depth=500 remote ${{ inputs.remote_branch }}



    - shell: bash
      run: |
        branches=()
        eval "$(git for-each-ref --shell --format='branches+=(%(refname:lstrip=3))' 'refs/remotes/origin')"


        for branch in "${branches[@]}"; do
          if [[ "$branch" == "HEAD" ]]; then
            continue
          fi


          git checkout origin/$branch --quiet

          if [[ -z "$(git merge-base origin/$branch remote/${{ inputs.remote_branch }})" ]]; then
            continue
          fi



          printf "Rebasing %s\n" $branch

          last_msg="$(git log -1 --pretty=format:%B)"

          if [[ -n "$(git rebase remote/${{ inputs.remote_branch }})" ]]; then
            # actions hack - avoid error auto-stop
            printf ("==  error  ==");
            git status -s
          fi


          if [[ -n $(git status -s) ]]; then
            printf ("==  error2  ==");

            cd ${{ github.workspace }}
            git status -s

            git add --all
            git commit -m "$last_msg"

            git rebase --continue
          fi


          git push -f origin HEAD:$branch
          printf "\n"
        done
